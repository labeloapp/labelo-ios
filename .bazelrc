# It is faster to compute digests with Blake3
startup --digest_function=blake3
common --cache_computed_file_digests=500000

common --flag_alias=ios_device=@rules_apple//apple/build_settings:ios_device

# We want to be able to develop offline, thus we vendor all our Bazel external deps.
common --vendor_dir=.bazel_vendored


# We disable sandboxing as it is slow on Darwin.
common --noworker_sandboxing
common --spawn_strategy=worker,local

# Use a static value for `PATH` and does not inherit `LD_LIBRARY_PATH`. Doesn't let environment
# variables like `PATH` sneak into the build, which can cause massive cache misses when they change.
build --incompatible_strict_action_env

# We Disallow empty lists of files
build --incompatible_disallow_empty_glob

# Use all available CPU cores for workers.
build --worker_max_instances=HOST_CPUS

# Enable local disk cache
common --disk_cache=~/bazel_disk_cache
common --remote_cache=grpcs://remote.buildbuddy.io
common --noremote_upload_local_results
# We don't want CI machines to use disk cache.
common:upload --disk_cache=
common:upload --remote_upload_local_results

# No need to cache these types of artifacts
common --modify_execution_info=^(AppleLipo|BitcodeSymbolsCopy|BundleApp|BundleTreeApp|DsymDwarf|DsymLipo|GenerateAppleSymbolsFile|ObjcBinarySymbolStrip|CppArchive|CppLink|ObjcLink|ProcessAndSign|SignBinary|SwiftArchive|SwiftStdlibCopy)$=+no-remote,^(BundleResources|ImportedDynamicFrameworkProcessor)$=+no-remote-exec

# CI

common:ci --config=upload
common:ci --color=yes
common:ci --announce_rc
common:CI --bes_results_url=https://app.buildbuddy.io/invocation/
common:ci --bes_backend=grpcs://remote.buildbuddy.io


# Cache warming

common:warming --config=upload
common:warming --remote_download_minimal

# Testing 

# `bazel test` tries to build everything also by default, so we skip that.
test --build_tests_only
# Show detailed errors for test failures
test --test_output=errors

# Load Xcode bazelrc file.
xcode.bazelrc