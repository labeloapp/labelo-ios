load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library", "swift_library_group")
load("@rules_license//rules:license.bzl", "license")
load("@rules_license//rules:package_info.bzl", "package_info")

package(
    default_package_metadata = [
        ":license.rspm",
        ":package_info.rspm",
    ],
)

exports_files(["pkg_info.json"])

license(
    name = "license.rspm",
    license_text = "LICENSE.txt",
)

package_info(
    name = "package_info.rspm",
    package_name = "swift-collections",
    package_url = "https://github.com/apple/swift-collections",
    package_version = "1.1.4",
)

swift_library(
    name = "BitCollections.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "BitCollections",
    srcs = [
        "Sources/BitCollections/BitArray/BitArray+BitwiseOperations.swift",
        "Sources/BitCollections/BitArray/BitArray+ChunkedBitsIterators.swift",
        "Sources/BitCollections/BitArray/BitArray+Codable.swift",
        "Sources/BitCollections/BitArray/BitArray+Collection.swift",
        "Sources/BitCollections/BitArray/BitArray+Copy.swift",
        "Sources/BitCollections/BitArray/BitArray+CustomReflectable.swift",
        "Sources/BitCollections/BitArray/BitArray+Descriptions.swift",
        "Sources/BitCollections/BitArray/BitArray+Equatable.swift",
        "Sources/BitCollections/BitArray/BitArray+ExpressibleByArrayLiteral.swift",
        "Sources/BitCollections/BitArray/BitArray+ExpressibleByStringLiteral.swift",
        "Sources/BitCollections/BitArray/BitArray+Extras.swift",
        "Sources/BitCollections/BitArray/BitArray+Fill.swift",
        "Sources/BitCollections/BitArray/BitArray+Hashable.swift",
        "Sources/BitCollections/BitArray/BitArray+Initializers.swift",
        "Sources/BitCollections/BitArray/BitArray+Invariants.swift",
        "Sources/BitCollections/BitArray/BitArray+LosslessStringConvertible.swift",
        "Sources/BitCollections/BitArray/BitArray+RandomBits.swift",
        "Sources/BitCollections/BitArray/BitArray+RangeReplaceableCollection.swift",
        "Sources/BitCollections/BitArray/BitArray+Shifts.swift",
        "Sources/BitCollections/BitArray/BitArray+Testing.swift",
        "Sources/BitCollections/BitArray/BitArray._UnsafeHandle.swift",
        "Sources/BitCollections/BitArray/BitArray.swift",
        "Sources/BitCollections/BitSet/BitSet+BidirectionalCollection.swift",
        "Sources/BitCollections/BitSet/BitSet+Codable.swift",
        "Sources/BitCollections/BitSet/BitSet+CustomDebugStringConvertible.swift",
        "Sources/BitCollections/BitSet/BitSet+CustomReflectable.swift",
        "Sources/BitCollections/BitSet/BitSet+CustomStringConvertible.swift",
        "Sources/BitCollections/BitSet/BitSet+Equatable.swift",
        "Sources/BitCollections/BitSet/BitSet+ExpressibleByArrayLiteral.swift",
        "Sources/BitCollections/BitSet/BitSet+Extras.swift",
        "Sources/BitCollections/BitSet/BitSet+Hashable.swift",
        "Sources/BitCollections/BitSet/BitSet+Initializers.swift",
        "Sources/BitCollections/BitSet/BitSet+Invariants.swift",
        "Sources/BitCollections/BitSet/BitSet+Random.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra basics.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra conformance.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra formIntersection.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra formSymmetricDifference.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra formUnion.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra intersection.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isDisjoint.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isEqualSet.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isStrictSubset.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isStrictSuperset.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isSubset.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra isSuperset.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra subtract.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra subtracting.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra symmetricDifference.swift",
        "Sources/BitCollections/BitSet/BitSet+SetAlgebra union.swift",
        "Sources/BitCollections/BitSet/BitSet+Sorted Collection APIs.swift",
        "Sources/BitCollections/BitSet/BitSet.Counted.swift",
        "Sources/BitCollections/BitSet/BitSet.Index.swift",
        "Sources/BitCollections/BitSet/BitSet._UnsafeHandle.swift",
        "Sources/BitCollections/BitSet/BitSet.swift",
        "Sources/BitCollections/Shared/Range+Utilities.swift",
        "Sources/BitCollections/Shared/Slice+Utilities.swift",
        "Sources/BitCollections/Shared/UInt+Tricks.swift",
        "Sources/BitCollections/Shared/_Word.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "Collections.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = [
        "@swiftpkg_swift_collections//:BitCollections.rspm",
        "@swiftpkg_swift_collections//:DequeModule.rspm",
        "@swiftpkg_swift_collections//:HashTreeCollections.rspm",
        "@swiftpkg_swift_collections//:HeapModule.rspm",
        "@swiftpkg_swift_collections//:OrderedCollections.rspm",
        "@swiftpkg_swift_collections//:_RopeModule.rspm",
    ],
    minimum_os_version = "oldest",
    module_name = "Collections",
    srcs = ["Sources/Collections/Collections.swift"],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "DequeModule.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "DequeModule",
    srcs = [
        "Sources/DequeModule/Deque+Codable.swift",
        "Sources/DequeModule/Deque+Collection.swift",
        "Sources/DequeModule/Deque+CustomReflectable.swift",
        "Sources/DequeModule/Deque+Descriptions.swift",
        "Sources/DequeModule/Deque+Equatable.swift",
        "Sources/DequeModule/Deque+ExpressibleByArrayLiteral.swift",
        "Sources/DequeModule/Deque+Extras.swift",
        "Sources/DequeModule/Deque+Hashable.swift",
        "Sources/DequeModule/Deque+Testing.swift",
        "Sources/DequeModule/Deque._Storage.swift",
        "Sources/DequeModule/Deque._UnsafeHandle.swift",
        "Sources/DequeModule/Deque.swift",
        "Sources/DequeModule/_DequeBuffer.swift",
        "Sources/DequeModule/_DequeBufferHeader.swift",
        "Sources/DequeModule/_DequeSlot.swift",
        "Sources/DequeModule/_UnsafeWrappedBuffer.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "HashTreeCollections.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "HashTreeCollections",
    srcs = [
        "Sources/HashTreeCollections/HashNode/_AncestorHashSlots.swift",
        "Sources/HashTreeCollections/HashNode/_Bitmap.swift",
        "Sources/HashTreeCollections/HashNode/_Bucket.swift",
        "Sources/HashTreeCollections/HashNode/_Hash.swift",
        "Sources/HashTreeCollections/HashNode/_HashLevel.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Builder.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Debugging.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Initializers.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Invariants.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Lookups.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Primitive Insertions.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Primitive Removals.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Primitive Replacement.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Storage.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural compactMapValues.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural filter.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural intersection.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural isDisjoint.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural isEqualSet.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural isSubset.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural mapValues.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural merge.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural subtracting.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural symmetricDifference.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Structural union.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Subtree Insertions.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Subtree Modify.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+Subtree Removals.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode+UnsafeHandle.swift",
        "Sources/HashTreeCollections/HashNode/_HashNode.swift",
        "Sources/HashTreeCollections/HashNode/_HashNodeHeader.swift",
        "Sources/HashTreeCollections/HashNode/_HashSlot.swift",
        "Sources/HashTreeCollections/HashNode/_HashStack.swift",
        "Sources/HashTreeCollections/HashNode/_HashTreeIterator.swift",
        "Sources/HashTreeCollections/HashNode/_HashTreeStatistics.swift",
        "Sources/HashTreeCollections/HashNode/_RawHashNode+UnsafeHandle.swift",
        "Sources/HashTreeCollections/HashNode/_RawHashNode.swift",
        "Sources/HashTreeCollections/HashNode/_UnmanagedHashNode.swift",
        "Sources/HashTreeCollections/HashNode/_UnsafePath.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Codable.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Collection.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+CustomReflectable.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Debugging.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Descriptions.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Equatable.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+ExpressibleByDictionaryLiteral.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Filter.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Hashable.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Initializers.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Keys.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+MapValues.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Merge.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Sendable.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Sequence.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary+Values.swift",
        "Sources/HashTreeCollections/TreeDictionary/TreeDictionary.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Codable.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Collection.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+CustomReflectable.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Debugging.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Descriptions.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Equatable.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+ExpressibleByArrayLiteral.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Extras.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Filter.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Hashable.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Sendable.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+Sequence.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra Initializers.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra basics.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra formIntersection.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra formSymmetricDifference.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra formUnion.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra intersection.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isDisjoint.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isEqualSet.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isStrictSubset.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isStrictSuperset.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isSubset.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra isSuperset.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra subtract.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra subtracting.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra symmetricDifference.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet+SetAlgebra union.swift",
        "Sources/HashTreeCollections/TreeSet/TreeSet.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "HeapModule.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "HeapModule",
    srcs = [
        "Sources/HeapModule/Heap+Descriptions.swift",
        "Sources/HeapModule/Heap+ExpressibleByArrayLiteral.swift",
        "Sources/HeapModule/Heap+Invariants.swift",
        "Sources/HeapModule/Heap+UnsafeHandle.swift",
        "Sources/HeapModule/Heap.swift",
        "Sources/HeapModule/_HeapNode.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "InternalCollectionsUtilities.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    minimum_os_version = "oldest",
    module_name = "InternalCollectionsUtilities",
    srcs = [
        "Sources/InternalCollectionsUtilities/Compatibility/autogenerated/UnsafeMutableBufferPointer+SE-0370.swift",
        "Sources/InternalCollectionsUtilities/Compatibility/autogenerated/UnsafeMutablePointer+SE-0370.swift",
        "Sources/InternalCollectionsUtilities/Compatibility/autogenerated/UnsafeRawPointer extensions.swift",
        "Sources/InternalCollectionsUtilities/IntegerTricks/autogenerated/FixedWidthInteger+roundUpToPowerOfTwo.swift",
        "Sources/InternalCollectionsUtilities/IntegerTricks/autogenerated/Integer rank.swift",
        "Sources/InternalCollectionsUtilities/IntegerTricks/autogenerated/UInt+first and last set bit.swift",
        "Sources/InternalCollectionsUtilities/IntegerTricks/autogenerated/UInt+reversed.swift",
        "Sources/InternalCollectionsUtilities/UnsafeBitSet/autogenerated/_UnsafeBitSet+Index.swift",
        "Sources/InternalCollectionsUtilities/UnsafeBitSet/autogenerated/_UnsafeBitSet+_Word.swift",
        "Sources/InternalCollectionsUtilities/UnsafeBitSet/autogenerated/_UnsafeBitSet.swift",
        "Sources/InternalCollectionsUtilities/_SortedCollection.swift",
        "Sources/InternalCollectionsUtilities/_UniqueCollection.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/Debugging.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/Descriptions.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/RandomAccessCollection+Offsets.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/Specialize.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/UnsafeBufferPointer+Extras.swift",
        "Sources/InternalCollectionsUtilities/autogenerated/UnsafeMutableBufferPointer+Extras.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "OrderedCollections.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "OrderedCollections",
    srcs = [
        "Sources/OrderedCollections/HashTable/_HashTable+Bucket.swift",
        "Sources/OrderedCollections/HashTable/_HashTable+BucketIterator.swift",
        "Sources/OrderedCollections/HashTable/_HashTable+Constants.swift",
        "Sources/OrderedCollections/HashTable/_HashTable+CustomStringConvertible.swift",
        "Sources/OrderedCollections/HashTable/_HashTable+Testing.swift",
        "Sources/OrderedCollections/HashTable/_HashTable+UnsafeHandle.swift",
        "Sources/OrderedCollections/HashTable/_HashTable.swift",
        "Sources/OrderedCollections/HashTable/_Hashtable+Header.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Codable.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+CustomReflectable.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Deprecations.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Descriptions.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Elements.SubSequence.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Elements.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Equatable.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+ExpressibleByDictionaryLiteral.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Hashable.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Initializers.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Invariants.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Partial MutableCollection.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Partial RangeReplaceableCollection.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Sendable.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Sequence.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary+Values.swift",
        "Sources/OrderedCollections/OrderedDictionary/OrderedDictionary.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Codable.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+CustomReflectable.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Descriptions.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Diffing.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Equatable.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+ExpressibleByArrayLiteral.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Hashable.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Initializers.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Insertions.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Invariants.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial MutableCollection.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial RangeReplaceableCollection.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra formIntersection.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra formSymmetricDifference.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra formUnion.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra intersection.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isDisjoint.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isEqualSet.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isStrictSubset.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isStrictSuperset.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isSubset.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra isSuperset.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra subtract.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra subtracting.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra symmetricDifference.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra union.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Partial SetAlgebra+Basics.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+RandomAccessCollection.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+ReserveCapacity.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Sendable.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+SubSequence.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+Testing.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+UnorderedView.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet+UnstableInternals.swift",
        "Sources/OrderedCollections/OrderedSet/OrderedSet.swift",
        "Sources/OrderedCollections/Utilities/_UnsafeBitset.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "_CollectionsTestSupport.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "_CollectionsTestSupport",
    srcs = [
        "Tests/_CollectionsTestSupport/AssertionContexts/Assertions.swift",
        "Tests/_CollectionsTestSupport/AssertionContexts/CollectionTestCase.swift",
        "Tests/_CollectionsTestSupport/AssertionContexts/Combinatorics.swift",
        "Tests/_CollectionsTestSupport/AssertionContexts/TestContext.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckBidirectionalCollection.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckCollection.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckComparable.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckEquatable.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckHashable.swift",
        "Tests/_CollectionsTestSupport/ConformanceCheckers/CheckSequence.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalBidirectionalCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalDecoder.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalEncoder.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalIndex.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalIterator.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalMutableRandomAccessCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalMutableRangeReplaceableRandomAccessCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalRandomAccessCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalRangeReplaceableRandomAccessCollection.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/MinimalSequence.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/ResettableValue.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/_CollectionState.swift",
        "Tests/_CollectionsTestSupport/MinimalTypes/_MinimalCollectionCore.swift",
        "Tests/_CollectionsTestSupport/Utilities/AllOnesRandomNumberGenerator.swift",
        "Tests/_CollectionsTestSupport/Utilities/Box.swift",
        "Tests/_CollectionsTestSupport/Utilities/DictionaryAPIChecker.swift",
        "Tests/_CollectionsTestSupport/Utilities/HashableBox.swift",
        "Tests/_CollectionsTestSupport/Utilities/IndexRangeCollection.swift",
        "Tests/_CollectionsTestSupport/Utilities/Integer Square Root.swift",
        "Tests/_CollectionsTestSupport/Utilities/LifetimeTracked.swift",
        "Tests/_CollectionsTestSupport/Utilities/LifetimeTracker.swift",
        "Tests/_CollectionsTestSupport/Utilities/RandomStableSample.swift",
        "Tests/_CollectionsTestSupport/Utilities/RepeatableRandomNumberGenerator.swift",
        "Tests/_CollectionsTestSupport/Utilities/SetAPIChecker.swift",
        "Tests/_CollectionsTestSupport/Utilities/SortedCollectionAPIChecker.swift",
        "Tests/_CollectionsTestSupport/Utilities/StringConvertibleValue.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library(
    name = "_RopeModule.rspm",
    always_include_developer_search_paths = True,
    copts = [
        "-DSWIFT_PACKAGE",
        "-DCOLLECTIONS_RANDOMIZED_TESTING",
    ],
    deps = ["@swiftpkg_swift_collections//:InternalCollectionsUtilities.rspm"],
    minimum_os_version = "oldest",
    module_name = "_RopeModule",
    srcs = [
        "Sources/RopeModule/BigString/Basics/BigString+Builder.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Contents.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Debugging.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Index.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Ingester.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Invariants.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Iterators.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Metrics.swift",
        "Sources/RopeModule/BigString/Basics/BigString+Summary.swift",
        "Sources/RopeModule/BigString/Basics/BigString.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Append and Insert.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Breaks.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Counts.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Description.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Indexing by Characters.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Indexing by UTF16.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+RopeElement.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk+Splitting.swift",
        "Sources/RopeModule/BigString/Chunk/BigString+Chunk.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+BidirectionalCollection.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+Comparable.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+CustomDebugStringConvertible.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+CustomStringConvertible.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+Equatable.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+ExpressibleByStringLiteral.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+Hashing.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+LosslessStringConvertible.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+RangeReplaceableCollection.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+Sequence.swift",
        "Sources/RopeModule/BigString/Conformances/BigString+TextOutputStream.swift",
        "Sources/RopeModule/BigString/Operations/BigString+Append.swift",
        "Sources/RopeModule/BigString/Operations/BigString+Initializers.swift",
        "Sources/RopeModule/BigString/Operations/BigString+Insert.swift",
        "Sources/RopeModule/BigString/Operations/BigString+Managing Breaks.swift",
        "Sources/RopeModule/BigString/Operations/BigString+RemoveSubrange.swift",
        "Sources/RopeModule/BigString/Operations/BigString+ReplaceSubrange.swift",
        "Sources/RopeModule/BigString/Operations/BigString+Split.swift",
        "Sources/RopeModule/BigString/Operations/Range+BigString.swift",
        "Sources/RopeModule/BigString/Views/BigString+UTF16View.swift",
        "Sources/RopeModule/BigString/Views/BigString+UTF8View.swift",
        "Sources/RopeModule/BigString/Views/BigString+UnicodeScalarView.swift",
        "Sources/RopeModule/BigString/Views/BigSubstring+UTF16View.swift",
        "Sources/RopeModule/BigString/Views/BigSubstring+UTF8View.swift",
        "Sources/RopeModule/BigString/Views/BigSubstring+UnicodeScalarView.swift",
        "Sources/RopeModule/BigString/Views/BigSubstring.swift",
        "Sources/RopeModule/Rope/Basics/Rope+Builder.swift",
        "Sources/RopeModule/Rope/Basics/Rope+Debugging.swift",
        "Sources/RopeModule/Rope/Basics/Rope+Invariants.swift",
        "Sources/RopeModule/Rope/Basics/Rope+_Node.swift",
        "Sources/RopeModule/Rope/Basics/Rope+_Storage.swift",
        "Sources/RopeModule/Rope/Basics/Rope+_UnmanagedLeaf.swift",
        "Sources/RopeModule/Rope/Basics/Rope+_UnsafeHandle.swift",
        "Sources/RopeModule/Rope/Basics/Rope.swift",
        "Sources/RopeModule/Rope/Basics/RopeElement.swift",
        "Sources/RopeModule/Rope/Basics/RopeMetric.swift",
        "Sources/RopeModule/Rope/Basics/RopeSummary.swift",
        "Sources/RopeModule/Rope/Basics/_RopeItem.swift",
        "Sources/RopeModule/Rope/Basics/_RopePath.swift",
        "Sources/RopeModule/Rope/Basics/_RopeVersion.swift",
        "Sources/RopeModule/Rope/Conformances/Rope+Collection.swift",
        "Sources/RopeModule/Rope/Conformances/Rope+Index.swift",
        "Sources/RopeModule/Rope/Conformances/Rope+Sequence.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Append.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Extract.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Find.swift",
        "Sources/RopeModule/Rope/Operations/Rope+ForEachWhile.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Insert.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Join.swift",
        "Sources/RopeModule/Rope/Operations/Rope+MutatingForEach.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Remove.swift",
        "Sources/RopeModule/Rope/Operations/Rope+RemoveSubrange.swift",
        "Sources/RopeModule/Rope/Operations/Rope+Split.swift",
        "Sources/RopeModule/Utilities/Optional Utilities.swift",
        "Sources/RopeModule/Utilities/String Utilities.swift",
        "Sources/RopeModule/Utilities/String.Index+ABI.swift",
        "Sources/RopeModule/Utilities/_CharacterRecognizer.swift",
    ],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
)

swift_library_group(
    name = "BitCollections",
    deps = ["@swiftpkg_swift_collections//:BitCollections.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "Collections",
    deps = ["@swiftpkg_swift_collections//:Collections.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "DequeModule",
    deps = ["@swiftpkg_swift_collections//:DequeModule.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "HashTreeCollections",
    deps = ["@swiftpkg_swift_collections//:HashTreeCollections.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "HeapModule",
    deps = ["@swiftpkg_swift_collections//:HeapModule.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "OrderedCollections",
    deps = ["@swiftpkg_swift_collections//:OrderedCollections.rspm"],
    visibility = ["//visibility:public"],
)

swift_library_group(
    name = "_RopeModule",
    deps = ["@swiftpkg_swift_collections//:_RopeModule.rspm"],
    visibility = ["//visibility:public"],
)
