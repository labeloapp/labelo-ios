# Generated by python/repositories.bzl

load("@bazel_tools//tools/python:toolchain.bzl", "py_runtime_pair")
load("@rules_python//python/cc:py_cc_toolchain.bzl", "py_cc_toolchain")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "files",
    srcs = glob(
        include = ["bin/**", "extensions/**", "include/**", "lib/**", "libs/**", "share/**"],
        # Platform-agnostic filegroup can't match on all patterns.
        allow_empty = True,
        exclude = ["**/* *", "lib/libpython3.11.so", "lib/**/*.a", "lib/python3.11/**/test/**", "lib/python3.11/**/tests/**", "**/__pycache__/*.pyc.*"],
    ),
)

cc_import(
    name = "interface",
    interface_library = "libs/python311.lib",
    system_provided = True,
)

filegroup(
    name = "includes",
    srcs = glob(["include/**/*.h"]),
)

cc_library(
    name = "python_headers",
    deps = select({
        "@bazel_tools//src/conditions:windows": [":interface"],
        "//conditions:default": None,
    }),
    hdrs = [":includes"],
    includes = [
        "include",
        "include/python3.11",
        "include/python3.11m",
    ],
)

cc_library(
    name = "libpython",
    hdrs = [":includes"],
    srcs = select({
        "@platforms//os:windows": ["python3.dll", "libs/python311.lib"],
        "@platforms//os:macos": ["lib/libpython3.11.dylib"],
        "@platforms//os:linux": ["lib/libpython3.11.so", "lib/libpython3.11.so.1.0"],
    }),
)

exports_files(["python", "bin/python3"])

# Used to only download coverage toolchain when the coverage is collected by
# bazel.
config_setting(
    name = "coverage_enabled",
    values = {"collect_code_coverage": "true"},
    visibility = ["//visibility:private"],
)

py_runtime(
    name = "py3_runtime",
    files = [":files"],
    # coverage_tool attribute not supported by this Bazel version
    interpreter = "bin/python3",
    python_version = "PY3",
)

py_runtime_pair(
    name = "python_runtimes",
    py2_runtime = None,
    py3_runtime = ":py3_runtime",
)

py_cc_toolchain(
    name = "py_cc_toolchain",
    headers = ":python_headers",
    python_version = "3.11",
)
